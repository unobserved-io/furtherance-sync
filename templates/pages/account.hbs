{{#> base}}
    {{#*inline "content"}}
        <h2>Account Settings</h2>

        {{#if error_msg}}
        <div class="error">{{error_msg}}</div>
        {{/if}}

        {{#if success_msg}}
        <div class="success">{{success_msg}}</div>
        {{/if}}

        <div class="settings-section">
            <h3>Change Password</h3>
            <form method="POST" action="/account/change-password" class="settings-form">
                <div class="form-group">
                    <label for="current_password">Current Password</label>
                    <input type="password" id="current_password" name="current_password" required>
                </div>

                <div class="form-group">
                    <label for="new_password">New Password</label>
                    <input type="password" id="new_password" name="new_password" required minlength="8">
                    {{#if official}}
                    <div class="password-requirements">
                        <div class="requirement" id="req-length">
                            <span class="requirement-icon requirement-unmet">×</span>
                            <span class="requirement-text requirement-unmet">At least 8 characters</span>
                        </div>
                        <div class="requirement" id="req-uppercase">
                            <span class="requirement-icon requirement-unmet">×</span>
                            <span class="requirement-text requirement-unmet">At least one uppercase letter</span>
                        </div>
                        <div class="requirement" id="req-lowercase">
                            <span class="requirement-icon requirement-unmet">×</span>
                            <span class="requirement-text requirement-unmet">At least one lowercase letter</span>
                        </div>
                        <div class="requirement" id="req-number">
                            <span class="requirement-icon requirement-unmet">×</span>
                            <span class="requirement-text requirement-unmet">At least one number</span>
                        </div>
                        <div class="requirement" id="req-special">
                            <span class="requirement-icon requirement-unmet">×</span>
                            <span class="requirement-text requirement-unmet">At least one special character</span>
                        </div>
                    </div>
                    {{/if}}
                </div>

                <div class="form-group">
                    <label for="confirm_password">Confirm New Password</label>
                    <input type="password" id="confirm_password" name="confirm_password" required>
                </div>

                <button type="submit" class="button">Change Password</button>
            </form>
        </div>

        <div class="settings-section">
            <h3>Change Email</h3>
            {{#if official}}
            <form method="POST" action="/account/change-email" class="settings-form">
                <div class="form-group">
                    <label for="new_email">New Email</label>
                    <input type="email" id="new_email" name="new_email" required>
                </div>

                <div class="form-group">
                    <label for="password">Current Password</label>
                    <input type="password" id="password" name="password" required>
                </div>

                <button type="submit" class="button">Request Email Change</button>
            </form>
            {{else}}
            <form method="POST" action="/account/change-email" class="settings-form">
                <div class="form-group">
                    <label for="new_email">New Email</label>
                    <input type="email" id="new_email" name="new_email" required>
                </div>

                <div class="form-group">
                    <label for="password">Current Password</label>
                    <input type="password" id="password" name="password" required>
                </div>

                <button type="submit" class="button">Change Email</button>
            </form>
            {{/if}}
        </div>

        <style>
            .settings-section {
                background: white;
                padding: 2rem;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                margin-bottom: 2rem;
            }

            .settings-section h3 {
                margin-top: 0;
                color: #333;
                padding-bottom: 1rem;
            }

            .settings-form {
                max-width: 400px;
            }

            .form-group {
                margin-bottom: 1rem;
            }

            .form-group label {
                display: block;
                margin-bottom: 0.5rem;
                color: #333;
            }

            .form-group input {
                width: 100%;
                padding: 0.75rem;
                border: 1px solid #ddd;
                border-radius: 4px;
                font-size: 1rem;
            }

            .button {
                margin-top: 1rem;
            }

            .error {
                background-color: #f8d7da;
                border: 1px solid #f5c6cb;
                color: #721c24;
                padding: 0.75rem;
                border-radius: 4px;
                margin-bottom: 1rem;
            }

            .success {
                background-color: #d4edda;
                border: 1px solid #c3e6cb;
                color: #155724;
                padding: 0.75rem;
                border-radius: 4px;
                margin-bottom: 1rem;
            }

            .password-requirements {
                margin-top: 0.5rem;
                font-size: 0.9rem;
                padding-left: 1rem;
                display: none;
            }

            .requirement {
                display: flex;
                align-items: center;
                gap: 0.5rem;
                margin: 0.25rem 0;
            }

            .requirement-icon {
                width: 16px;
                height: 16px;
                display: inline-flex;
                align-items: center;
                justify-content: center;
                border-radius: 50%;
                font-size: 12px;
                font-weight: bold;
            }

            .requirement-met {
                color: #16a34a;
            }

            .requirement-unmet {
                color: #dc2626;
            }

            .requirement-icon.requirement-met {
                background-color: #dcfce7;
            }

            .requirement-icon.requirement-unmet {
                background-color: #fee2e2;
            }
        </style>

        <script>
            {{#if official}}
            document.addEventListener('DOMContentLoaded', function() {
                const passwordInput = document.getElementById('new_password');
                const requirementsDiv = document.querySelector('.password-requirements');
                const requirements = {
                    length: { regex: /.{8,}/, element: document.getElementById('req-length') },
                    uppercase: { regex: /[A-Z]/, element: document.getElementById('req-uppercase') },
                    lowercase: { regex: /[a-z]/, element: document.getElementById('req-lowercase') },
                    number: { regex: /[0-9]/, element: document.getElementById('req-number') },
                    special: { regex: /[!@#$%^&*(),.?":{}|<>]/, element: document.getElementById('req-special') }
                };

                function updateRequirement(element, isMet) {
                    const icon = element.querySelector('.requirement-icon');
                    const text = element.querySelector('.requirement-text');

                    if (isMet) {
                        icon.textContent = '✓';
                        icon.classList.remove('requirement-unmet');
                        icon.classList.add('requirement-met');
                        text.classList.remove('requirement-unmet');
                        text.classList.add('requirement-met');
                    } else {
                        icon.textContent = '×';
                        icon.classList.remove('requirement-met');
                        icon.classList.add('requirement-unmet');
                        text.classList.remove('requirement-met');
                        text.classList.add('requirement-unmet');
                    }
                }

                function checkPassword(password) {
                    requirementsDiv.style.display = password.length > 0 ? 'block' : 'none';

                    for (const [key, requirement] of Object.entries(requirements)) {
                        const isMet = requirement.regex.test(password);
                        updateRequirement(requirement.element, isMet);
                    }
                }

                passwordInput.addEventListener('input', (e) => {
                    checkPassword(e.target.value);
                });
            });
            {{/if}}

            document.querySelector('form[action="/account/change-password"]')
                .addEventListener('submit', function(e) {
                    const newPassword = document.getElementById('new_password').value;
                    const confirmPassword = document.getElementById('confirm_password').value;

                    {{#if official}}
                    // Check password requirements
                    const hasNumber = /[0-9]/.test(newPassword);
                    const hasSpecial = /[!@#$%^&*(),.?":{}|<>]/.test(newPassword);
                    const hasUppercase = /[A-Z]/.test(newPassword);
                    const hasLowercase = /[a-z]/.test(newPassword);
                    const isLongEnough = newPassword.length >= 8;

                    if (!(hasNumber && hasSpecial && hasUppercase && hasLowercase && isLongEnough)) {
                        e.preventDefault();
                        alert('Password must meet all requirements');
                        return;
                    }
                    {{/if}}

                    if (newPassword !== confirmPassword) {
                        e.preventDefault();
                        alert('New passwords do not match');
                    }
                });
        </script>
    {{/inline}}
{{/base}}
