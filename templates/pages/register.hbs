<html>
<head>
    <title>Register - Furtherance</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f5f5f5;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .register-container {
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 430px;
            box-sizing: border-box;
        }

        .header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .header h1 {
            color: #B179F1;
            margin: 0;
        }

        .form-group {
            margin-bottom: 1rem;
            padding: 0;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            color: #333;
        }

        input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
            box-sizing: border-box;
        }

        .button {
            background: #B179F1;
            color: white;
            border: none;
            padding: 0.75rem 1rem;
            border-radius: 4px;
            width: 100%;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .button:hover {
            background: #9b63e4;
        }

        .error {
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
            padding: 0.75rem;
            border-radius: 4px;
            margin-bottom: 1rem;
        }

        .success {
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
            padding: 0.75rem;
            border-radius: 4px;
            margin-bottom: 1rem;
        }

        .login-link {
            text-align: center;
            margin-top: 1rem;
        }

        .login-link a {
            color: #B179F1;
            text-decoration: none;
        }

        .login-link a:hover {
            text-decoration: underline;
        }

        .password-requirements {
            margin-top: 0.5rem;
            font-size: 0.9rem;
            padding-left: 1rem;
            display: none;
        }

        .requirement {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin: 0.25rem 0;
        }

        .requirement-icon {
            width: 16px;
            height: 16px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            font-size: 12px;
            font-weight: bold;
        }

        .requirement-met {
            color: #16a34a;
        }

        .requirement-unmet {
            color: #dc2626;
        }

        .requirement-icon.requirement-met {
            background-color: #dcfce7;
        }

        .requirement-icon.requirement-unmet {
            background-color: #fee2e2;
        }

        {{#if official}}
        .register-button-container {
            margin-top: 1rem;
        }
        {{/if}}
    </style>
</head>
<body>
    <div class="register-container">
        <div class="header">
            <h1>Sign Up</h1>
        </div>

        {{#if error_msg}}
            <div class="error">
                {{error_msg}}
            </div>
        {{/if}}

        {{#if success_msg}}
            <div class="success">
                {{success_msg}}
            </div>
        {{/if}}

        <form method="POST" action="/register">
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required />
            </div>

            {{#if official}}
                <div class="password-requirements">
                    <div class="requirement" id="req-length">
                        <span class="requirement-icon requirement-unmet">×</span>
                        <span class="requirement-text requirement-unmet">At least 8 characters</span>
                    </div>
                    <div class="requirement" id="req-uppercase">
                        <span class="requirement-icon requirement-unmet">×</span>
                        <span class="requirement-text requirement-unmet">At least one uppercase letter</span>
                    </div>
                    <div class="requirement" id="req-lowercase">
                        <span class="requirement-icon requirement-unmet">×</span>
                        <span class="requirement-text requirement-unmet">At least one lowercase letter</span>
                    </div>
                    <div class="requirement" id="req-number">
                        <span class="requirement-icon requirement-unmet">×</span>
                        <span class="requirement-text requirement-unmet">At least one number</span>
                    </div>
                    <div class="requirement" id="req-special">
                        <span class="requirement-icon requirement-unmet">×</span>
                        <span class="requirement-text requirement-unmet">At least one special character</span>
                    </div>
                </div>

                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        const passwordInput = document.getElementById('password');
                        const requirementsDiv = document.querySelector('.password-requirements');
                        const requirements = {
                            length: { regex: /.{8,}/, element: document.getElementById('req-length') },
                            uppercase: { regex: /[A-Z]/, element: document.getElementById('req-uppercase') },
                            lowercase: { regex: /[a-z]/, element: document.getElementById('req-lowercase') },
                            number: { regex: /[0-9]/, element: document.getElementById('req-number') },
                            special: { regex: /[!@#$%^&*(),.?":{}|<>]/, element: document.getElementById('req-special') }
                        };

                        function updateRequirement(element, isMet) {
                            const icon = element.querySelector('.requirement-icon');
                            const text = element.querySelector('.requirement-text');

                            if (isMet) {
                                icon.textContent = '✓';
                                icon.classList.remove('requirement-unmet');
                                icon.classList.add('requirement-met');
                                text.classList.remove('requirement-unmet');
                                text.classList.add('requirement-met');
                            } else {
                                icon.textContent = '×';
                                icon.classList.remove('requirement-met');
                                icon.classList.add('requirement-unmet');
                                text.classList.remove('requirement-met');
                                text.classList.add('requirement-unmet');
                            }
                        }

                        function checkPassword(password) {
                            // Show/hide requirements based on password length
                            requirementsDiv.style.display = password.length > 0 ? 'block' : 'none';

                            // Update each requirement
                            for (const [key, requirement] of Object.entries(requirements)) {
                                const isMet = requirement.regex.test(password);
                                updateRequirement(requirement.element, isMet);
                            }
                        }

                        passwordInput.addEventListener('input', (e) => {
                            checkPassword(e.target.value);
                        });
                    });
                </script>
            {{/if}}

            <div class="register-button-container">
                <button type="submit" class="button">Register</button>
            </div>
        </form>

        <div class="login-link">
            <p>Already have an account? <a href="/login">Log In</a></p>
        </div>
    </div>
</body>
</html>
